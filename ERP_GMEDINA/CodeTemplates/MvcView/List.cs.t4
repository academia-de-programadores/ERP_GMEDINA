<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
}
else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
  <head>
      <meta name="viewport" content="width=device-width" />
      <title><#= ViewName #></title>
  </head>
  <body>
<#
    PushIndent("    ");
}
#>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="float-e-margins">
                <div class="ibox-title">
                    <h5>Listado de <#= ViewDataTypeShortName #></h5>
                    <div class="ibox-tools">
						<button type="button" class="btn btn-primary btn-xs" id="btnAgregar">Nuevo</button>
                    </div>
                </div>
                <div class="ibox-content">
                  <table id="table" class="table table-striped table-bordered table-hover dataTables-example">
                    <thead>
                        <tr role="row">
<#
                            IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
                            foreach (PropertyMetadata property in properties) {
                                if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
      // This is a temporary work around until core scaffolding provides support for independent associations.
                                    if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                                        continue;
                                    }
#>
                            <th class="sorting_asc" tabindex="0" aria-controls="DataTables_Table_0" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Rendering engine: activate to sort column descending" style="width: 128px;">@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</th>
<#
                                }
                            }
#>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody id="tbody">
<#
                      string pkName = GetPrimaryKeyName();
#>
                      @foreach (var item in Model) {
                        <tr class="gradeA odd" role="row">
<#
                          foreach (PropertyMetadata property in properties) {
                              if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
      // This is a temporary work around until core scaffolding provides support for independent associations.
                                if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                                    continue;
                                }
#>
                            <td>
                                @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
                            </td>
<#
                              }
                          }
                          if (pkName != null) {
#>
                            <td>
							    <button data-id="@item.<#= pkName #>" type="button" class="btn btn-primary btn-xs" id="btnEditar">Editar</button>
                                <button  data-id="@item.<#= pkName #>"  type="button" class="btn btn-default btn-xs" id="btnDetalle">Detalle</button>
                            </td>
<#
                            }
                            else {
#>
                            <td>
                              @Html.ActionLink("Detalles", "Details", new { /*id=item.pkName*/ },  new {@class = "btn btn-primary btn-xs" })
                              @Html.ActionLink("Editar", "Edit", new { /*id=item.pkName*/ }, new {@class = "btn btn-default btn-xs" })
                            </td>
<#
}
#>
                        </tr>
                      }
                    </tbody>
                        <tfoot>
                            <tr role="row">
<#
                            foreach (PropertyMetadata property in properties) {
                                if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
      // This is a temporary work around until core scaffolding provides support for independent associations.
                                    if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                                        continue;
                                    }
#>
									<th rowspan="1" colspan="1">@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</th>								
<#
                                }
                            }
#>
                                <th></th>
                            </tr>
                        </tfoot>
                   </table>
                </div>
            </div>
        </div>
    </div>
 </div>
<div class="modal fade" id="ModalAgregar" tabindex="-1" role="dialog" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Agregar datos</h4>
            </div>
            <div class="modal-body" id="Crear">
                @Html.Partial("_Create", new <#= ViewDataTypeName #>())
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="btnCreateRegistro">Aceptar</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalEditar" tabindex="-1" role="dialog" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Edición de datos</h4>
            </div>
            <div class="modal-body" id="Editar">
                @*Mandamos un nuevo modelo solo para poder cargar la página *@
                @Html.Partial("_Edit", new <#= ViewDataTypeName #>())
            </div>
            <div class="modal-footer">
                @*data-dismiss="modal"*@
                <button type="button" class="btn btn-white" id="btnCerrarEditar">Close</button>
                <button type="button" class="btn btn-primary" id="btnUpdate">Aceptar</button>
                <button type="button" class="btn btn-danger" id="btnmodalInactivar">Inactivar</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalDetalles" tabindex="-1" role="dialog" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Detalles</h4>
            </div>
            <div class="modal-body" id="Detalles">
                @Html.Partial("_Details", new <#= ViewDataTypeName #>())
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ModalInactivar" tabindex="-1" role="dialog" aria-hidden="false">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Inactivar</h4>
            </div>
            <div class="modal-body" id="Inactivar">
                ¿Esta seguro que desea Inactivar este registro?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-white" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger " id="btnInactivarRegistro">Inactivar</button>
            </div>
        </div>
    </div>
</div>




  <#
  // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
  #>
  <#
  if(!IsPartialView && !IsLayoutPageSelected) {
      ClearIndent();
  #>
  </body>
</html>
<#
  }
#>
<#



#>
@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/izitoast")
    @Scripts.Render("~/Scripts/app/general/<#= ViewDataTypeShortName.Substring(2) #>.js")
}

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Content/plugins/izitoast/iziToast")
}
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>