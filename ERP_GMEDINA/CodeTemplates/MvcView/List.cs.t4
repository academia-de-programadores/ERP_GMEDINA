<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
}
else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
  <head>
      <meta name="viewport" content="width=device-width" />
      <title><#= ViewName #></title>
  </head>
  <body>
<#
    PushIndent("    ");
}
#>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-4">
        <h2><#= ViewDataTypeShortName.Substring(2) #></h2>
        <ol class="breadcrumb">
            <li class="active">
            </li>
        </ol>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="float-e-margins">
                <div class="ibox-title">
                    <h5>Listado de <#= ViewDataTypeShortName.Substring(2) #></h5>
                    <div class="ibox-tools">
                        <input type="button" id="btnAgregar" class="btn btn-primary btn-xs" value="Registrar <#= ViewDataTypeShortName.Substring(2) #>" />
                    </div>
                </div>
                <div class="ibox-content">
                  <table class="table table-striped table-bordered table-hover dataTables-example" id="IndexTable">
                    <thead>
                        <tr role="row">
<#
                            IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
                            foreach (PropertyMetadata property in properties) {
						  	string hola = Convert.ToString(property.PropertyName.ToString());

	            int count = 0;
				bool permiso = true;
            foreach (var item in hola)
            {
                count++;
            }
			

				if (count >=6)
	{
	if (property.PropertyName.Substring(count - 6) == "Estado")
	{
	 permiso = false;
	}
	}
				if (count >=13)
	{
	if (property.PropertyName.Substring(count - 13) == "RazonInactivo")
	{
	 permiso = false;
	}
	}



					if (count >=11)
	{
	if (property.PropertyName.Substring(count - 11) == "UsuarioCrea")
	{
	 permiso = false;
	}
	}

					if (count >=9)
	{
	if (property.PropertyName.Substring(count - 9) == "FechaCrea")
	{
	 permiso = false;
	}
	}

					if (count >=15)
	{
	if (property.PropertyName.Substring(count - 15) == "UsuarioModifica")
	{
	 permiso = false;
	}
	}

					if (count >=13)
	{
	if (property.PropertyName.Substring(count - 13) == "FechaModifica")
	{
	 permiso = false;
	}
	}
	
	if (count >=9)
	{
		if (property.PropertyName.Substring(0,9) == "tbUsuario")
	{
	 permiso = false;
	}
	}
                                if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey && permiso) {
#>
<#
      // This is a temporary work around until core scaffolding provides support for independent associations.
                                    if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                                        continue;
                                    }
#>
                            <th>@Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)</th>
<#
                                }
                            }
#>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
<#
                      string pkName = GetPrimaryKeyName();
#>
                      @foreach (var item in Model) 
                      {
                        <tr class="gradeA odd" role="row" data-id="@item.<#= pkName #>">
<#
                          foreach (PropertyMetadata property in properties) {
						  	string hola = Convert.ToString(property.PropertyName.ToString());

	            int count = 0;
				bool permiso = true;
            foreach (var item in hola)
            {
                count++;
            }
			

				if (count >=6)
	{
	if (property.PropertyName.Substring(count - 6) == "Estado")
	{
	 permiso = false;
	}
	}
				if (count >=13)
	{
	if (property.PropertyName.Substring(count - 13) == "RazonInactivo")
	{
	 permiso = false;
	}
	}



					if (count >=11)
	{
	if (property.PropertyName.Substring(count - 11) == "UsuarioCrea")
	{
	 permiso = false;
	}
	}

					if (count >=9)
	{
	if (property.PropertyName.Substring(count - 9) == "FechaCrea")
	{
	 permiso = false;
	}
	}

					if (count >=15)
	{
	if (property.PropertyName.Substring(count - 15) == "UsuarioModifica")
	{
	 permiso = false;
	}
	}

					if (count >=13)
	{
	if (property.PropertyName.Substring(count - 13) == "FechaModifica")
	{
	 permiso = false;
	}
	}

		if (count >=9)
	{
		if (property.PropertyName.Substring(0,9) == "tbUsuario")
	{
	 permiso = false;
	}
	}

                              if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey && permiso) {
#>
<#
      // This is a temporary work around until core scaffolding provides support for independent associations.
                                if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
                                    continue;
                                }
#>
                            <td>@Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)</td>
<#
                              }
                          }
                          if (pkName != null) {
#>
                            <td>
							    <a class="btn btn-primary btn-xs " onclick="tablaDetalles(@item.<#= pkName #>)">Detalles</a>
							    <a class="btn btn-default btn-xs " onclick="tablaEditar(@item.<#= pkName #>)">Editar</a>
                            </td>
<#
                            }
                            else {
#>
                            <td>
                              @Html.ActionLink("Detalles", "Details", new { /*id=item.pkName*/ },  new {@class = "btn btn-primary btn-xs" })
                              @Html.ActionLink("Editar", "Edit", new { /*id=item.pkName*/ }, new {@class = "btn btn-default btn-xs" })
                            </td>
<#
}
#>
                        </tr>
                      }
                    </tbody>                       
                  </table>
                </div>
            </div>
        </div>
    </div>
 </div>
@Html.Partial("_Create", new <#= ViewDataTypeName #>())
@Html.Partial("_Delete", new <#= ViewDataTypeName #>())
@Html.Partial("_Edit", new <#= ViewDataTypeName #>())
@Html.Partial("_Detalles", new <#= ViewDataTypeName #>())
  <#
  // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
  #>
  <#
  if(!IsPartialView && !IsLayoutPageSelected) {
      ClearIndent();
  #>
  </body>
</html>
<#
  }
#>
<#
#>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Content/plugins/izitoast/iziToast")
}
@section Scripts {
@Scripts.Render("~/plugins/dataTables")
@Scripts.Render("~/Scripts/app/general")
@Scripts.Render("~/Scripts/app/general/<#= ViewDataTypeShortName.Substring(2) #>")
}
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>