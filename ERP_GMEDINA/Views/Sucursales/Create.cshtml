@model ERP_GMEDINA.Models.tbSucursales

@{
    ViewBag.Title = "Crear Sucursal";
    Layout = "~/Views/Shared/_LayoutBaseRRHH.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <a href="Index" class="pull-right">Regresar</a>

                    <h2>Crear Sucursal</h2>
                </div>

                <div  class="ibox-content">
                    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "FormNuevo" }))
                    {
                        <div class="form-horizontal" id="tbSucursales">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.empr_Id, "Empresa", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("empr_Id", null, htmlAttributes: new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(model => model.empr_Id, "", new { @class = "text-danger", @id = "errorempr_Id" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.tbMunicipio.tbDepartamento.dep_Nombre, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("dep_Codigo", null, htmlAttributes: new { @class = "form-control required" , @onchange = "LlenaMunicipios(this);" })
                                    @Html.ValidationMessageFor(model => model.tbMunicipio.tbDepartamento.dep_Codigo, "", new { @class = "text-danger", @id = "errormun_Codigo" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.mun_Codigo, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("mun_Codigo", null, htmlAttributes: new { @class = "form-control required" })
                                    @Html.ValidationMessageFor(model => model.mun_Codigo, "", new { @class = "text-danger", @id = "errormun_Codigo" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.bod_Id, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("bod_id", null, htmlAttributes: new { @class = "form-control required" })
                                    @*<select name="bod_Id" class="form-control required" id="bod_Id"></select>*@
                                    @Html.ValidationMessageFor(model => model.bod_Id, "", new { @class = "text-danger", @id = "errormun_Codigo" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.pemi_Id, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.DropDownList("pemi_Id", null, htmlAttributes: new { @class = "form-control required" })
                                    @*<select  name="pemi_Id" class="form-control required" id="pemi_Id"></select>*@
                                    @Html.ValidationMessageFor(model => model.pemi_Id, "", new { @class = "text-danger", @id = "errorpemi_Id" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.suc_Descripcion, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.suc_Descripcion, new { htmlAttributes = new { @class = "form-control required valid", @onkeypress = "return alphanumeric(event)" } })
                                    @Html.ValidationMessageFor(model => model.suc_Descripcion, "", new { @class = "text-danger", @id = "errorsuc_Descripcion" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.suc_Correo, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.suc_Correo, new { htmlAttributes = new { @class = "form-control required valid" } })
                                    @Html.ValidationMessageFor(model => model.suc_Correo, "", new { @class = "text-danger", @id = "errorsuc_Correo" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.suc_Direccion, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.suc_Direccion, new { htmlAttributes = new { @class = "form-control required valid" } })
                                    @Html.ValidationMessageFor(model => model.suc_Direccion, "", new { @class = "text-danger", @id = "errorsuc_Direccion" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.suc_Telefono, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.suc_Telefono, new { htmlAttributes = new { @class = "form-control required valid", @onkeypress = "return Numericos(event)" } })
                                    @Html.ValidationMessageFor(model => model.suc_Telefono, "", new { @class = "text-danger", @id = "errorsuc_Telefono" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="button" value="Guardar" class="btn btn-primary" id="btnGuardar" />
                                    @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-default" })
                                </div>
                            </div>

                        </div>

                    }
                </div>

        </div>
    </div>
</div>

@section Styles {
    @*@Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")*@
    @Styles.Render("~/Content/plugins/izitoast/iziToast")
    @Styles.Render("~/Content/plugins/izitoast/iziToast.min")
}

@section Scripts {
    @*@Scripts.Render("~/plugins/customdataTables")*@
    @*general*@
    @Scripts.Render("~/Scripts/app/general")
    @Scripts.Render("~/Scripts/plugins/iziToast/iziToast.min")
    @Scripts.Render("~/Scripts/plugins/iziToast/iziToast")
    @Scripts.Render("~/Scripts/app/general/CreateSucursal")
}